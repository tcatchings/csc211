# IPython log file

# Tue, 08 Nov 2016 11:08:38
print('hello')
# Tue, 08 Nov 2016 11:08:49
get_ipython().system('cat sqlalchemy.log')
# Tue, 08 Nov 2016 11:19:52
import sqlalchemy
# Tue, 08 Nov 2016 11:20:18
sqlalchemy.__version__
#[Out]# '1.1.3'
# Tue, 08 Nov 2016 11:21:40
from sqlalchemy import create_engine
# Tue, 08 Nov 2016 11:22:13
engine = create_engine('sqlite:///:memory', echo=True)
# Tue, 08 Nov 2016 11:24:14
engine = create_engine('sqlite:///:memory:', echo=True)
# Tue, 08 Nov 2016 11:30:05
from sqlalchemy.ext.declarative import declarative_base
# Tue, 08 Nov 2016 11:30:37
Base = declarative_base
# Tue, 08 Nov 2016 11:30:39
Base
#[Out]# <function sqlalchemy.ext.declarative.api.declarative_base>
# Tue, 08 Nov 2016 11:31:44
from sqlalchemy import Column, Integer, String
# Tue, 08 Nov 2016 11:32:21
class User(Base):
    __tablename__ = 'users'
    
# Tue, 08 Nov 2016 11:32:25
class User(Base):
    __tablename__ = 'users'
    
# Tue, 08 Nov 2016 11:34:21
class User(Base):
    __tablename__ = 'users'
    id = Column(Integer, primary_key=True)
    name = Column(String)
    fullname = Column(String)
    password = Column(String)
    
# Tue, 08 Nov 2016 11:35:59
class User(Base):
    __tablename__ = 'users'
    id = Column(Integer, primary_key=True)
    name = Column(String)
    fullname = Column(String)
    password = Column(String)
    def __repr__(self):
        return "<User (name='%s', fullname='%s', password='%s')>" % (self.name, self.fullname, self.password)
    
# Tue, 08 Nov 2016 11:37:02
class User(Base):
    __tablename__ = 'users'
    id = Column(Integer, primary_key=True)
    name = Column(String)
    fullname = Column(String)
    password = Column(String)
    def __repr__(self):
        return "<User(name='%s', fullname='%s', password='%s')>" % (self.name, self.fullname, self.password)
    
# Tue, 08 Nov 2016 11:40:13
class User(Base):
    __tablename__ = 'users'
    id = Column(Integer, primary_key=True)
    name = Column(String)
    fullname = Column(String)
    password = Column(String)
    def __repr__(self):
        return "<User(name='%s', fullname='%s', password='%s')>" % (self.name, self.fullname, self.password)
    
# Tue, 08 Nov 2016 11:42:17
class User(Base):
    __tablename__ = 'users'
    id = Column(Integer, primary_key=True)
    name = Column(String)
    fullname = Column(String)
    password = Column(String)
    def __repr__(self):
        return "<User(name='{}', fullname='{}', password='{}')>".format(self.name, self.fullname, self.password)
    
# Tue, 08 Nov 2016 11:44:37
class User(Base):
    __tablename__ = 'users'
    id = Column(Integer, primary_key=True)
    name = Column(String)
    fullname = Column(String)
    password = Column(String)
    def __repr__(self):
        return "<User(name='{}', fullname='{}', password='{}')>".format(self.name, self.fullname, self.password)
       
# Tue, 08 Nov 2016 11:45:45
User.__table__
# Tue, 08 Nov 2016 11:47:32
class User(Base):
    __tablename__ = 'users'
    id = Column(Integer, primary_key=True)
    name = Column(String)
    fullname = Column(String)
    password = Column(String)
    def __repr__(self):
        return "<User(name='{}', fullname='{}', password='{}')>".format(self.name, self.fullname, self.password)
       
# Tue, 08 Nov 2016 11:49:54
class User(Base):
    __tablename__ = 'users'
    id = Column(Integer, primary_key=True)
    name = Column(String)
    fullname = Column(String)
    password = Column(String)
    def __repr__(self):
        return "<User(name='{}', fullname='{}', password='{}'>".format(self.name, self.fullname, self.password)
       
# Tue, 08 Nov 2016 11:50:30
class User(Base):
    __tablename__ = 'users'
    id = Column(Integer, primary_key=True)
    name = Column(String)
    fullname = Column(String)
    password = Column(String)
    def __repr__(self):
        return "<User(name='{}', fullname='{}', password='{}')>".format(self.name, self.fullname, self.password)
       
# Tue, 08 Nov 2016 11:50:51
engine = create_engine('sqlite:///:memory:', echo=True)
